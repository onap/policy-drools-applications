{
  "comments": [
    {
      "key": {
        "uuid": "1a76adc5_9c56e929",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 57
      },
      "writtenOn": "2018-09-22T00:25:01Z",
      "side": 1,
      "message": "Use a verb capitalized.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 3
      },
      "revId": "80abc05f949ac827cf2cd99b65253eb7a800ca61",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_48808b46",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 811
      },
      "writtenOn": "2018-09-24T14:08:54Z",
      "side": 1,
      "message": "Ah, hadn\u0027t thought about the verb issue.  However, these had all been lowercase up until recently, I thought - in fact, I purposely changed some of them to lower case to match the convention.  Guess the convention has now changed - learn something new every day!",
      "parentUuid": "1a76adc5_9c56e929",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 3
      },
      "revId": "80abc05f949ac827cf2cd99b65253eb7a800ca61",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_99b909ef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 423
      },
      "writtenOn": "2018-09-26T18:27:27Z",
      "side": 1,
      "message": "I hear you.  Am wondering what the convention is documented.  I think on some of my previous commits, I received comments to end the first line comment with a period, but looking at other commit messages, it seems the first line starts with a capital letter but ends without a punctuation mark... which seems slightly odd.",
      "parentUuid": "1a76adc5_48808b46",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 3
      },
      "revId": "80abc05f949ac827cf2cd99b65253eb7a800ca61",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_485bab2e",
        "filename": "controlloop/common/guard/src/main/java/org/onap/policy/guard/PipEngineGetStatus.java",
        "patchSetId": 2
      },
      "lineNbr": 230,
      "author": {
        "id": 811
      },
      "writtenOn": "2018-09-24T14:00:59Z",
      "side": 1,
      "message": "preference would be to remove \"{}\".  Otherwise, change to: log.error(\"some message {}\", e.getMessage(), e).  The logging framework treats a final \"Exception\" object special and knows to log it and print a stack trace.  All other arguments are used to fill in \"{}\" place-holders while formatting the message.  In this case, I\u0027m not sure what it puts there, but it\u0027s probably redundant.",
      "revId": "80abc05f949ac827cf2cd99b65253eb7a800ca61",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_6881c74c",
        "filename": "controlloop/common/guard/src/main/java/org/onap/policy/guard/PipEngineGetStatus.java",
        "patchSetId": 2
      },
      "lineNbr": 230,
      "author": {
        "id": 811
      },
      "writtenOn": "2018-09-24T14:08:54Z",
      "side": 1,
      "message": "I just tried a test and found that it doesn\u0027t replace the trailing \"{}\" at all - it just leaves \"{}\" in the message that is logged, so this should be removed or an additional argument added with which to populate it.  (Again, the preference is to remove it as the logger framework will already log the exception.)",
      "parentUuid": "1a76adc5_485bab2e",
      "revId": "80abc05f949ac827cf2cd99b65253eb7a800ca61",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_b9be45d3",
        "filename": "controlloop/common/guard/src/main/java/org/onap/policy/guard/PipEngineGetStatus.java",
        "patchSetId": 2
      },
      "lineNbr": 230,
      "author": {
        "id": 423
      },
      "writtenOn": "2018-09-26T18:27:27Z",
      "side": 1,
      "message": "Thanks for checking on this!",
      "parentUuid": "1a76adc5_6881c74c",
      "revId": "80abc05f949ac827cf2cd99b65253eb7a800ca61",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_083db3bb",
        "filename": "controlloop/common/guard/src/main/java/org/onap/policy/guard/PipEngineGetStatus.java",
        "patchSetId": 2
      },
      "lineNbr": 236,
      "author": {
        "id": 811
      },
      "writtenOn": "2018-09-24T14:00:59Z",
      "side": 1,
      "message": "SUGGESTION: technically, could remove the \"\u003d\u003d null\" check now",
      "revId": "80abc05f949ac827cf2cd99b65253eb7a800ca61",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_d9c6a168",
        "filename": "controlloop/common/guard/src/main/java/org/onap/policy/guard/PipEngineGetStatus.java",
        "patchSetId": 2
      },
      "lineNbr": 236,
      "author": {
        "id": 423
      },
      "writtenOn": "2018-09-26T18:27:27Z",
      "side": 1,
      "message": "Thanks!  I hadn\u0027t known that Jave 7 introduced equality checking on potentially null values---this comment prompted me to investigate and learn that.",
      "parentUuid": "1a76adc5_083db3bb",
      "revId": "80abc05f949ac827cf2cd99b65253eb7a800ca61",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_c846db4f",
        "filename": "controlloop/common/guard/src/main/java/org/onap/policy/guard/PipEngineGetStatus.java",
        "patchSetId": 2
      },
      "lineNbr": 279,
      "author": {
        "id": 811
      },
      "writtenOn": "2018-09-24T14:00:59Z",
      "side": 1,
      "message": "remove trailing \"{}\"",
      "revId": "80abc05f949ac827cf2cd99b65253eb7a800ca61",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_8878e390",
        "filename": "controlloop/templates/template.demo.clc/src/main/java/org/onap/policy/guard/PolicyGuardXacmlHelperEmbedded.java",
        "patchSetId": 2
      },
      "lineNbr": 248,
      "author": {
        "id": 811
      },
      "writtenOn": "2018-09-24T14:00:59Z",
      "side": 1,
      "message": "remove second \"{}\"",
      "revId": "80abc05f949ac827cf2cd99b65253eb7a800ca61",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_286d0fcd",
        "filename": "controlloop/templates/template.demo.clc/src/main/java/org/onap/policy/guard/PolicyGuardXacmlHelperEmbedded.java",
        "patchSetId": 2
      },
      "lineNbr": 257,
      "author": {
        "id": 811
      },
      "writtenOn": "2018-09-24T14:00:59Z",
      "side": 1,
      "message": "remove trailing \"{}\"",
      "revId": "80abc05f949ac827cf2cd99b65253eb7a800ca61",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}