{
  "comments": [
    {
      "key": {
        "uuid": "5387fcf1_bf337a5b",
        "filename": "controlloop/common/controller-usecases/src/main/java/org/onap/policy/drools/apps/controller/usecases/step/GuardStep2.java",
        "patchSetId": 10
      },
      "lineNbr": 155,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-09-01T15:46:47Z",
      "side": 1,
      "message": "I think you were saying just do this - I hope it works.",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 155,
        "endChar": 85
      },
      "revId": "bd0dcc7505e80220dae92954565dcdc8948ac094",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11938003_451ed325",
        "filename": "controlloop/common/controller-usecases/src/main/java/org/onap/policy/drools/apps/controller/usecases/step/GuardStep2.java",
        "patchSetId": 10
      },
      "lineNbr": 155,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-09-01T16:04:52Z",
      "side": 1,
      "message": "a couple of things:\n1) did you decide we only need the vserver id from the top level vserver?  If so, then this is fine\n2) now that the guard needs the vserver, it should let the manager know that it needs the vserver property, so getPropertyNames() should be updated to return a new property name, perhaps UsecasesConstants.AAI_VSERVER\n3) the new property name should also be added to UsecasesEventManager.CQ_PROPERTIES so that the manager knows it will have to do a CQ to retrieve it\n\nIf you decide to go with one of the VNFs instead of the Vserver, then #1, 2, \u0026 3 would have to change to reflect the VNF of interest.  In that case, you may find one of the existing VNF properties is the one you want (e.g, based on target resource ID or model invariant ID) - if that turns out to be true, then you wouldn\u0027t have to do step #3 because the manager already knows about those two types of VNFs.",
      "parentUuid": "5387fcf1_bf337a5b",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 155,
        "endChar": 85
      },
      "revId": "bd0dcc7505e80220dae92954565dcdc8948ac094",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfdb8cfb_df20e75d",
        "filename": "controlloop/common/controller-usecases/src/main/java/org/onap/policy/drools/apps/controller/usecases/step/GuardStep2.java",
        "patchSetId": 10
      },
      "lineNbr": 155,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-09-01T16:15:12Z",
      "side": 1,
      "message": "1) Was the easiest to do since I couldn\u0027t really decipher the code. It also looks like the test policy for vFirewall is also incorrect, it has the resourceID set to a modelinvariantId if I\u0027m seeing correctly when scanning the custom query information. I can\u0027t really tell which test json is being used so I have to look at the console log. That is totally wrong. There is too much for me to validate here, perhaps testing with Integration will reveal if these problems are all really there.",
      "parentUuid": "11938003_451ed325",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 155,
        "endChar": 85
      },
      "revId": "bd0dcc7505e80220dae92954565dcdc8948ac094",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "780a12a1_bef73064",
        "filename": "controlloop/common/controller-usecases/src/main/java/org/onap/policy/drools/apps/controller/usecases/step/GuardStep2.java",
        "patchSetId": 10
      },
      "lineNbr": 155,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-09-01T16:26:27Z",
      "side": 1,
      "message": "I\u0027ll have to check the vFirewall case.\n\nAs for test json, in rules-test/src/main/resources, you\u0027ll find a subdirectory for vcpe, vdns, etc.  Each one contains the xxx.onset.json that is used for the corresponding rules test",
      "parentUuid": "dfdb8cfb_df20e75d",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 155,
        "endChar": 85
      },
      "revId": "bd0dcc7505e80220dae92954565dcdc8948ac094",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17d91205_af167e6e",
        "filename": "controlloop/common/controller-usecases/src/main/java/org/onap/policy/drools/apps/controller/usecases/step/GuardStep2.java",
        "patchSetId": 10
      },
      "lineNbr": 155,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-09-01T16:31:25Z",
      "side": 1,
      "message": "Regarding vFirewall, the actor code does this:\n\n  cq.getGenericVnfByModelInvariantId(target-resource-id)\n\nSo the target resource ID just has to match one of the model invariants within the CQ response.  Whether or not it\u0027s a valid resource ID doesn\u0027t really matter, as long as the CQ response class can find it.",
      "parentUuid": "780a12a1_bef73064",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 155,
        "endChar": 85
      },
      "revId": "bd0dcc7505e80220dae92954565dcdc8948ac094",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa545810_087a3656",
        "filename": "controlloop/common/controller-usecases/src/main/java/org/onap/policy/drools/apps/controller/usecases/step/GuardStep2.java",
        "patchSetId": 10
      },
      "lineNbr": 155,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-09-01T18:04:27Z",
      "side": 1,
      "message": "Those directories are exactly what I\u0027m looking at which is why I think the vFirewall is specified incorrectly - but there is no custom query information in those directories. The vFirewall should be a vnf-id, not a modelInvariantId (that\u0027s for vDNS). It has to be able to dynamically find the correct vnf/vserver/model information based on what the policy designer specified. Every use case passes data differently.",
      "parentUuid": "17d91205_af167e6e",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 155,
        "endChar": 85
      },
      "revId": "bd0dcc7505e80220dae92954565dcdc8948ac094",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9b40ee4_1a18d985",
        "filename": "controlloop/common/controller-usecases/src/main/java/org/onap/policy/drools/apps/controller/usecases/step/GuardStep2.java",
        "patchSetId": 10
      },
      "lineNbr": 155,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-09-01T19:13:24Z",
      "side": 1,
      "message": "I can\u0027t answer that.  All I can say is that vFirewall uses the VNF, but it FINDS the VNF whose model invariant ID matches  the target-resource-id.  That is unchanged from prior releases (i.e., Casablanca and Dublin both worked the same way).",
      "parentUuid": "aa545810_087a3656",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 155,
        "endChar": 85
      },
      "revId": "bd0dcc7505e80220dae92954565dcdc8948ac094",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a285766_cb509cdb",
        "filename": "controlloop/common/controller-usecases/src/test/java/org/onap/policy/drools/apps/controller/usecases/step/GuardStep2Test.java",
        "patchSetId": 10
      },
      "lineNbr": 99,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-09-01T15:46:47Z",
      "side": 1,
      "message": "I\u0027ll remove this in the next patch when I fix the vCPE tests.",
      "range": {
        "startLine": 98,
        "startChar": 8,
        "endLine": 99,
        "endChar": 64
      },
      "revId": "bd0dcc7505e80220dae92954565dcdc8948ac094",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8ce58d3_e50a8c5d",
        "filename": "controlloop/common/controller-usecases/src/test/java/org/onap/policy/drools/apps/controller/usecases/step/GuardStep2Test.java",
        "patchSetId": 10
      },
      "lineNbr": 128,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-09-01T15:46:47Z",
      "side": 1,
      "message": "Maybe this is why vCPE tests fail?",
      "range": {
        "startLine": 128,
        "startChar": 20,
        "endLine": 128,
        "endChar": 39
      },
      "revId": "bd0dcc7505e80220dae92954565dcdc8948ac094",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fac39ff3_cfaee6a5",
        "filename": "controlloop/common/controller-usecases/src/test/java/org/onap/policy/drools/apps/controller/usecases/step/GuardStep2Test.java",
        "patchSetId": 10
      },
      "lineNbr": 128,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-09-01T16:04:52Z",
      "side": 1,
      "message": "This line only impacts this junit tests; it doesn\u0027t affect the rules tests.\n\nvCPE never required a CQ before, thus vserver-name was not required in the enrichment data in the onset.  Now, since the guard requires the CQ, vCPE now requires the CQ, too (indirectly), thus vserver-name must be included within the onset json that is used in the rules tests - should probably verify that it appears in all of the onsets in rules-test.",
      "parentUuid": "c8ce58d3_e50a8c5d",
      "range": {
        "startLine": 128,
        "startChar": 20,
        "endLine": 128,
        "endChar": 39
      },
      "revId": "bd0dcc7505e80220dae92954565dcdc8948ac094",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb4b9331_55c7da19",
        "filename": "controlloop/common/controller-usecases/src/test/java/org/onap/policy/drools/apps/controller/usecases/step/GuardStep2Test.java",
        "patchSetId": 10
      },
      "lineNbr": 196,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-09-01T15:46:47Z",
      "side": 1,
      "message": "Need to add vserver-id",
      "range": {
        "startLine": 196,
        "startChar": 16,
        "endLine": 196,
        "endChar": 41
      },
      "revId": "bd0dcc7505e80220dae92954565dcdc8948ac094",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f98934b9_22fa5c8a",
        "filename": "controlloop/common/controller-usecases/src/test/java/org/onap/policy/drools/apps/controller/usecases/step/GuardStep2Test.java",
        "patchSetId": 10
      },
      "lineNbr": 196,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-09-01T16:04:52Z",
      "side": 1,
      "message": "yes",
      "parentUuid": "eb4b9331_55c7da19",
      "range": {
        "startLine": 196,
        "startChar": 16,
        "endLine": 196,
        "endChar": 41
      },
      "revId": "bd0dcc7505e80220dae92954565dcdc8948ac094",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}